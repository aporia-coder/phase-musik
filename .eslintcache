[{"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\index.js":"1","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\App.js":"2","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Library.js":"3","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Navbar.js":"4","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Song.js":"5","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Player.js":"6","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\utilities\\music.js":"7","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\LibrarySong.js":"8"},{"size":916,"mtime":1666634760922,"results":"9","hashOfConfig":"10"},{"size":2530,"mtime":1666634760910,"results":"11","hashOfConfig":"10"},{"size":1302,"mtime":1666634760913,"results":"12","hashOfConfig":"10"},{"size":1606,"mtime":1666637231871,"results":"13","hashOfConfig":"10"},{"size":765,"mtime":1666635481886,"results":"14","hashOfConfig":"10"},{"size":4527,"mtime":1666635651534,"results":"15","hashOfConfig":"10"},{"size":3230,"mtime":1666634760924,"results":"16","hashOfConfig":"10"},{"size":1569,"mtime":1666634760914,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1rsbowf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\index.js",[],["36","37"],"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\App.js",[],"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Library.js",[],"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Navbar.js",[],"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Song.js",[],"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\Player.js",["38"],"import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faStepForward,\r\n  faStepBackward,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n  songs,\r\n  setSongs,\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  songRef,\r\n  timeInfo,\r\n  handleDrag,\r\n}) => {\r\n  const formatTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    if (isPlaying) {\r\n      songRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      songRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const handleSkipSong = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"forwards\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"backwards\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        if (isPlaying) songRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) songRef.current.play();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const newSong = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSong);\r\n  }, [currentSong]);\r\n\r\n  return (\r\n    <PlayerContainer>\r\n      <TimeControl>\r\n        <Time>{formatTime(timeInfo.currentTime)}</Time>\r\n        <Track currentSong={currentSong}>\r\n          <Slider\r\n            min={0}\r\n            max={timeInfo.duration || 0}\r\n            value={timeInfo.currentTime}\r\n            onChange={handleDrag}\r\n          />\r\n          <AnimateTrack timeInfo={timeInfo} />\r\n        </Track>\r\n        <Time>\r\n          {timeInfo.duration\r\n            ? formatTime(timeInfo.duration - timeInfo.currentTime)\r\n            : \"0:00\"}\r\n        </Time>\r\n      </TimeControl>\r\n      <IconContainer>\r\n        <FontAwesomeIcon\r\n          icon={faStepBackward}\r\n          size=\"2x\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => handleSkipSong(\"backwards\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={handlePlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faStepForward}\r\n          size=\"2x\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => handleSkipSong(\"forwards\")}\r\n        />\r\n      </IconContainer>\r\n    </PlayerContainer>\r\n  );\r\n};\r\n\r\nconst PlayerContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 30vh;\r\n`;\r\n\r\nconst TimeControl = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  @media (max-width: 900px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 30%;\r\n  padding-top: 1rem;\r\n  @media (max-width: 900px) {\r\n    width: 50%;\r\n  }\r\n`;\r\n\r\nconst Slider = styled.input.attrs({\r\n  type: \"range\",\r\n})`\r\n  width: 100%;\r\n  cursor: pointer;\r\n  -webkit-appearance: none;\r\n  background: transparent;\r\n  &::-webkit-slider-thumb {\r\n    -webkit-appearance: none;\r\n    height: 12px;\r\n    width: 12px;\r\n  }\r\n  &::-moz-range-thumb {\r\n    -webkit-appearance: none;\r\n    background: transparent;\r\n    border: none;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: 0;\r\n  }\r\n`;\r\n\r\nconst Time = styled.p`\r\n  font-size: 1rem;\r\n  padding: 0 2rem;\r\n`;\r\n\r\nconst Track = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  border-radius: 1rem;\r\n  overflow: hidden;\r\n  background: linear-gradient(\r\n    to right,\r\n    ${(props) => props.currentSong.color[1]},\r\n    ${(props) => props.currentSong.color[0]}\r\n  );\r\n`;\r\n\r\nconst AnimateTrack = styled.div`\r\n  background-color: rgb(204, 204, 204);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateX(${(props) => props.timeInfo.percentage}%);\r\n  pointer-events: none;\r\n  &:focus {\r\n    outline: none;\r\n    border: 0;\r\n  }\r\n`;\r\n\r\nexport default Player;\r\n","D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\utilities\\music.js",[],"D:\\Documents\\coding\\portfolio-projects\\phase-musik-main\\phase-musik\\src\\components\\LibrarySong.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":69,"column":6,"nodeType":"45","endLine":69,"endColumn":19,"suggestions":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["49"],"no-global-assign","no-unsafe-negation",{"desc":"50","fix":"51"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"52","text":"53"},[1691,1704],"[currentSong, setSongs, songs]"]